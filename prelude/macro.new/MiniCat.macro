SemiCat :=
    let (Poset := #Poset)
    in new record
(
    Ob := record

        -- stored fields
        ( SOb : Type )
        ( SHom (S1,S2 : SOb) : Poset )
        ( SMul (S1,S2,S3 : SOb) : (SHom S2 S3) * (SHom S1 S2) тед (SHom S1 S3) )

        -- evaluated fields
        ( Ob : Type := record
            (ob : SOb)
            (id : SHom S S)
            (mul : SMul ob ob ob id id =(SHom ob ob)= id ) )
        ( Hom (O1,O2 : Ob) : Poset :=
            ( El := SHom.El O1.ob O2.ob )
            ( To h1 h2 := record
                (to : h1 =(SHom.To O1.ob O2.ob)= h2 )
                (unitL : (SMul O1.ob O2.ob O2.ob $ (O2.id, h1)) =(SHom.To O1.ob O2.ob)= h2 )
                (unitR : (SMul O1.ob O1.ob O2.ob $ (h1, O1.id)) =(SHom.To O1.ob O2.ob)= h2 ) )
            ( Trans h1 h2 h3 hto12 hto23 := new
                (to := SHom.To.Trans O1.ob O2.ob hto12.to hto23.to)
                (unitL := SHom.To.Trans O1.ob O2.ob hto12.unitL hto23.to)
                (unitR := SHom.To.Trans O1.ob O2.ob hto12.unitR hto23.to) ) )
        ( Mul (O1,O2,O3 : Ob) : (Hom O2 O3) * (Hom O1 O2) тед (Hom O1 O3) :=
            )
)
