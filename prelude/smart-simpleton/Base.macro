Nat.Base := new
    ( Alg.Ob : Type := record
        ( Carrier : Type )
        ( Zero : Carrier )
        ( Succ : Carrier → Carrier ) )
    ( Alg.Predicate (alg : Alg.Ob) : Type := record
        ( Ok : alg.Carrier → Prop )
        ( ZeroOk : Ok alg.Zero )
        ( SuccOk (n : alg.Carrier) : Ok n → Ok (alg.Succ n) ) )
    ( Church : Alg.Ob := new
        ( Carrier := record (recur (N : Type) (Z : N) (S : N → N) : N) )
        ( Zero.recur   N Z S := Z )
        ( Succ.recur n N Z S := S (n N Z S) ) )
    ( SmallSigma (alg : Alg.Ob) (p : Alg.Predicate alg) : Alg.Ob := new
        ( Carrier := record (el : alg.Carrier) (ok : p.Ok el) )
        ( Zero   := new (el := alg.Zero) (ok := p.ZeroOk) )
        ( Succ n := new (el := alg.Succ n.el) (ok := p.SuccOk n.el n.ok) ) )
