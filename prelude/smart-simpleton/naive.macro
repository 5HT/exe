Data := new
    ( El : Type :=
            ∀ (N : Type) →
            ∀ (Z : N) →
            ∀ (S : N → N) →
            N )
    ( ZeroEl : El :=
            λ (N : Type) →
            λ (Z : N) →
            λ (S : N → N) →
            Z )
    ( SuccEl (n : El) : El :=
            λ (N : Type) →
            λ (Z : N) →
            λ (S : N → N) →
            S (n N Z S) )
    ( Ok (n : El) : Prop :=
            ∀ (P : El → Prop) →
            ∀ (z : P (ZeroEl)) →
            ∀ (s (m : El) : P (m) → P (SuccEl m) ) →
            P (n) )
    ( Nat : Type := record
            ( el : El )
            ( ok : Ok el ) )
    ( induc (P : El → Prop)
            (z : P (Zero))
            (s (m : El) : P (m) → P (SuccEl m) )
                : ∀ (n : Nat) → P (n) :=
            λ n → n.ok P z s )
    ( ZeroOk : Ok ZeroEl :=
            λ (P : El → Prop) →
            λ (z : P (ZeroEl)) →
            λ (s (m : El) : P (m) → P (SuccEl m) ) →
            z )
    ( SuccOk (n : Nat) : Ok (SuccEl n.el) :=
            λ (P : El → Prop) →
            λ (z : P (ZeroEl)) →
            λ (s (m : El) : P (m) → P (SuccEl m) ) →
            s n.el (n.ok P z s) )
    ( ZeroNat := new (el := ZeroEl) (ok := ZeroOk) )
    ( SuccNat := new (el := SuccEl) (ok := SuccOk) )
