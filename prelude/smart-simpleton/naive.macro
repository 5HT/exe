Data := let (default Base := #Base) in
new
    ( rec : OkRec := new
        ( Ok :=
            ∀ (P : El → Prop) →
            ∀ (z : P (ZeroEl)) →
            ∀ (s (m : El) : P (m) → P (SuccEl m) ) →
            P (n) )
        ( ZeroOk P z s := z)
        ( SuccOk n.el n.ok P z s := s n.el (n.ok P z s) ) )
    ( Init := Ok2Nat rec )
    ( induc (P : El → Prop)
            (z : P (Zero))
            (s (m : El) : P (m) → P (SuccEl m) )
            (n : Nat.Nat)
        : P (n) :=
            n.ok P z s )
