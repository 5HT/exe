SemiCat :=
    let (Type := #Type)
        (Poset := #Poset)
    in new record

-- categories, built from semicategories
( Ob := record

    -- stored fields
    ( SOb : Type )
    ( SHom (S1,S2 : SOb) : Poset )
    ( SMul (S1,S2,S3 : SOb) : (SHom S2 S3) * (SHom S1 S2) ⥤ (SHom S1 S3) )
    ( SAssocLR (S1,S2,S3,S4 : SOb)
        (h34 : SHom S3 S4) (h23 : SHom S2 S3) (h12 : SHom S1 S2)
        : SMul S1 S2 S4 (SMul S2 S3 S4 h34 h23) h12
            =(SHom S1 S4)=
          SMul S1 S3 S4 h34 (SMul S1 S2 S3 h23 h12) )
    ( SAssocRL (S1,S2,S3,S4 : SOb)
        (h34 : SHom S3 S4) (h23 : SHom S2 S3) (h12 : SHom S1 S2)
        : SMul S1 S3 S4 h34 (SMul S1 S2 S3 h23 h12)
            =(SHom S1 S4)=
          SMul S1 S2 S4 (SMul S2 S3 S4 h34 h23) h12 )

    -- evaluated fields
    ( Ob : Type := record
        (ob : SOb)
        (id : SHom ob ob)
        (mul : SMul ob ob ob id id =(SHom ob ob)= id ) )
    ( Hom (O1,O2 : Ob) : Poset :=
        ( El := SHom.El O1.ob O2.ob )
        ( To h1 h2 := record
            (to : h1 =(SHom.To O1.ob O2.ob)= h2 )
            (actL : (SMul.el.onEl O1.ob O2.ob O2.ob {O2.id.el, h1})
                    =(SHom.To O1.ob O2.ob)= h2 )
            (actR : (SMul.el.onEl O1.ob O1.ob O2.ob {h1, O1.id.el})
                    =(SHom.To O1.ob O2.ob)= h2 ) )
        ( Trans h1 h2 h3 hto12 hto23 := new
            (to := SHom.To.Trans O1.ob O2.ob h1 h2 h3
                    {hto12.to,hto23.to})
            (actL := SHom.To.Trans O1.ob O2.ob
                    (SMul.el.onEl O1.ob O2.ob O2.ob {O2.id.el, h1}) h2 h3
                    {hto12.actL,hto23.to})
            (actR := SHom.To.Trans O1.ob O2.ob
                    (SMul.el.onEl O1.ob O1.ob O2.ob {h1, O1.id.el}) h2 h3
                    {hto12.actR,hto23.to}) ) )
    ( Id (O0 : Ob) : Hom O0 O0 := O0.id )
    ( Mul (O1,O2,O3 : Ob) : (Hom O2 O3) * (Hom O1 O2) ⥤ (Hom O1 O3) := new
        ( el := SMul.el O1.ob O2.ob O3.ob )
        ( ok.onTo (h23,h12) (h23',h12') (h23to,h12to) := new
            (to := SMul.to O1.ob O2.ob O3.ob <h23,h12>T <h23',h12'>T
                    <h23to.to,h12to.to>T )
            (actL := .Trans (SHom O1.ob O2.ob) _ _ _ (SAssocLR   ) _ )
            (actR := ... ) ) )
    ( AssocLR := ... )
    ( AssocRL := ... )
    ( UnitL := ... )
    ( UnitR := ... )
    ( UnitM (O0 : Ob) :
            (SMul O0.ob O0.ob O0.ob (Id O0) (Id O0)) =(SHom ob ob)= (Id O0) :=
        O0.mul )
)
( `@` := Ob )

( Fun (C1,C2 : SemiCat) : SemiCat := new
    ( SOb := record (onOb : C1.SOb → C2.SOb) )
    ( SHom F1 F2 := new
        ( El := record
            ( onHom : ∀ (O1, O2 : C1) →
                C1.Hom O1 O2 ⥤ C2.SHom (F1.onOb O1.ob) (F2.onOb O2.ob) ) )
        ( To := record )
        ( Trans := )
    )
    ( SMul  )
)
