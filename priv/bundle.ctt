{- Topology. Fiber Bundle:
   - Family, Fibrations and their Equality.
   Copyright (c) Groupoid Infinity, 2014-2018. -}

module bundle where
import iso
import nat

-- F -> E -> B    -- fiber bundle
-- h: F -> E      -- homeomorphism
-- F              -- fiber, ex. Vector Space, Total Space, Dependent Product, Pi
-- E              -- total topological space
-- B              -- base space
-- p:      E -> B -- fiber map, surjective projection map
-- p-inv:  B -> E -- section map
-- Ex. E = B * F  -- total space of trivial fiber bundle

-- U = neighborhood in base B
-- fibers locally behave like a products, but could be twisted
--
--           h
--           |
-- p-inv (U) -> U * F
--        |   /
--    p --|  /-- proj_1
--        V /
--        U
--
-- proj_1 o homeo = f

-- prerequisite from equiv.ctt
fiber (E B: U) (p: E -> B) (y: B): U = (x: E) * Path B y (p x)

-- Fiber
Family    (B: U): U = B -> U
-- Fibration
Fibration (B: U): U = (X: U) * (X -> B)

-- Total Space of Fibrations or Fibred Space
total   (B: U) (F: Family B): U = Sigma B F -- total space
trivial (B: U) (F: Family B): total B F -> B = \ (x: total B F) -> x.1 -- proj_1
homeo (B E: U) (F: Family B) (p: E -> B) (y: B): fiber E B p y -> total B F = undefined

encode (B: U) (F: B -> U) (y: B) : fiber (total B F) B (trivial B F) y -> F y
  = \ (x: fiber (total B F) B (trivial B F) y) -> subst B F x.1.1 y (<i>x.2@-i) x.1.2

decode (B: U) (F: B -> U) (y: B) : F y -> fiber (total B F) B (trivial B F) y
  = \ (x: F y) -> ((y,x),refl B y)

--  E: U = total B F
--  T: U = fiber E B (trivial B F) y
--  1: U = (z: E) * Path B z.1 y
--  2: U = (z: B) * (k: F z) * Path B z y
--  3: U = (x y: B) * (_: Path B x y) * (F y)
--  4: U = (_: isContr B) * (F y)
--  5: U = F y

x: Fin zero = (encode nat Fin zero) ((decode nat Fin zero) fzero)
y: fiber (total nat Fin) nat (trivial nat Fin) zero
   = (decode nat Fin zero) ((encode nat Fin zero) ((zero,fzero),refl nat zero))

-- (1) Family of Total Fibrations is Dependent Function
FamFibIsDependent (B: U) (F: B -> U) (y: B)
  : Path U (fiber (total B F) B (trivial B F) y) (F y)
  = isoPath T A f g s t where
    T: U = fiber (total B F) B (trivial B F) y
    A: U = F y
    f: T -> A = encode B F y
    g: A -> T = decode B F y
    s (x: A): Path A (f (g x)) x = undefined --refl A x
    t (x: T): Path T (g (f x)) x = undefined --refl T x

-- (2) Total Family is Domain
TotalFam (B E: U) (p: E -> B)
  : Path U (total B (fiber E B p)) E = undefined

-- (3) Fibrational Family is a point in Codomain
FibFam (B E: U) (p: E -> B) (x: E)
  : Path B (p x)
           (trivial B (fiber E B p) (comp (<i> (TotalFam B E p) @ -i) x [])) = undefined

-- (4) Family is Fibration
FamEqFib (B: U)
  : Path U (Family B) (Fibration B) = undefined

