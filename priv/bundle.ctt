module bundle where
import iso

-- I = B
-- F (x: B) = pi^{-1} x -- fiber
-- E = B * F -- total space
-- U = neighborhood (B)
-- f: E -> B
-- f-inv: B -> E

-- f-inv (U) -> U * X
--        |   /
--     f  |  /  proj_1
--        V /
--        U

-- prerequisite from equiv.ctt
fiber (A B: U) (f: A -> B) (y: B): U = (x: A) * Path B y (f x)

Family    (B: U): U = B -> U           -- Dependent Function Space
Fibration (B: U): U = (X: U) -> X -> B -- Fibration

-- Total Space of Fibrations or Fibred Space
total (B: U) (X: Family B): U = Sigma B X -- total space
trivial (B: U) (X: Family B): total B X -> B = \ (x: total B X) -> x.1 -- proj_1
homeo (E B: U) (X: Family B) (f: E -> B) (y: B): fiber E B f y -> total B X = undefined

-- (1) Family of Total Fibrations is Dependent Function
FamFibIsDependent (I: U) (X: Family I) (i: I)
  : Path U (fiber (total I X) I (trivial I X) i) (X i) = undefined

-- (2) Total Family is Domain
TotalFam (B X: U) (p: X -> B)
  : Path U (total B (fiber X B p)) X = undefined

-- (3) Fibrational Family is a point in Codomain
FibFam (I X: U) (p: X -> I) (x: X)
  : Path I (p x)
           (trivial I (fiber X I p) (comp (<i> (TotalFam I X p) @ -i) x [])) = undefined

-- (4) Family is Fibration
FamEqFib (I: U)
  : Path U (Family I) (Fibration I) = undefined

