module iso_prop where

import iso

-- A proof that two propositions with maps between them can be identified with
-- each other
propPath (A B: U) (f: A -> B) (g: B -> A) (pA: isProp A) (pB: isProp B): Path U A B
  = isoPath A B f g (\ (b: B) -> pB (f (g b)) b) (\ (a: A) -> pA (g (f a)) a)

-- A proof that the two definitions of injectivity can be identified with each
-- other
injPath (A B: U) (f: A -> B) (sA: isSet A) (sB: isSet B): Path U (inj0 A B f sA sB) (inj1 A B f sA sB)
  = propPath (inj0 A B f sA sB) (inj1 A B f sA sB)
             (inj01 A B f sA sB) (inj10 A B f sA sB)
             (prop_inj0 A B f sA sB) (prop_inj1 A B f sA sB)
