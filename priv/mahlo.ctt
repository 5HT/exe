module mahlo where
-- http://www.cs.swan.ac.uk/~csetzer/articles/uppermahlo.ps
-- http://www.cs.swan.ac.uk/~csetzer/slides/pcc/2013Toulouse/slidesPCCToulouse2013.pdf
-- Mahlo Universes a la Setzer
mutual
data V
    = pi_  (x: V) (y: Elv x -> V)
    | uni_ (f: (x: V) -> (Elv x -> V) -> V)
           (g: (x: V) -> (y: Elv x -> V) -> (Elv (f x y) -> V) -> V)
Elv: V -> U = split
    pi_ a b -> (x: Elv a) -> Elv (b x)
    uni_ f g -> Universe f g
mutual
data Universe
    (f: (x: V) -> (Elv x -> V) -> V)
    (g: (x: V) -> (y: Elv x -> V) -> (Elv (f x y) -> V) -> V)
    = fun_ (x: Universe f g) (_: Elt f g x -> Universe f g)
    | f_   (x: Universe f g) (_: Elt f g x -> Universe f g)
    | g_   (x: Universe f g)
           (y: Elt f g x -> Universe f g)
           (z: Elv (f (Elt f g x) (\(a: Elt f g x) -> y a)))
Elt: (f: (x: V) -> (Elv x -> V) -> V) ->
     (g: (x: V) -> (y: Elv x -> V) ->
     (Elv (f x y) -> V) -> V) -> Universe f g -> V = undefined
