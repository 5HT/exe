module swaptrans where
import algebra

AscCom: U
  = (A: U)
  * (op: A -> A -> A)
  * (_: isAssociative A op)
  * (isCommutative A op)

swp0 (A : AscCom) (a b c : A.1)
  : Path A.1 (A.2.1 a (A.2.1 b c)) (A.2.1 b (A.2.1 a c))
  = let
    op : A.1 -> A.1 -> A.1
      = A.2.1
    asc (x y z : A.1) : Path A.1 (op x (op y z)) (op (op x y) z)
      = A.2.2.1 x y z
    cm (x y : A.1) : Path A.1 (op x y) (op y x)
      = A.2.2.2 x y
  in <i> comp (<_> A.1) (asc a b c @ i)
    [ (i = 0) -> <_> op a (op b c)
    , (i = 1) -> <j> comp (<_> A.1) (op (cm a b @ j) c)
      [ (j = 0) -> <_> op (op a b) c
      , (j = 1) -> <k> asc b a c @ -k ]]

swp1 (A : AscCom) (a b c : A.1)
  : Path A.1 (A.2.1 a (A.2.1 b c)) (A.2.1 c (A.2.1 b a))
  = let
    op : A.1 -> A.1 -> A.1
      = A.2.1
    asc (x y z : A.1) : Path A.1 (op x (op y z)) (op (op x y) z)
      = A.2.2.1 x y z
    cm (x y : A.1) : Path A.1 (op x y) (op y x)
      = A.2.2.2 x y
  in <i> comp (<_> A.1) (op a (cm b c @ i))
    [ (i = 0) -> <_> op a (op b c)
    , (i = 1) -> <j> comp (<_> A.1) (swp0 A a c b @ j)
      [ (j = 0) -> <_> op a (op c b)
      , (j = 1) -> <k> op c (cm a b @ k) ]]

swp2 (A : AscCom) (a b c : A.1)
  : Path A.1 (A.2.1 (A.2.1 a b) c) (A.2.1 (A.2.1 c b) a)
  = let
    op : A.1 -> A.1 -> A.1
      = A.2.1
    asc (x y z : A.1) : Path A.1 (op x (op y z)) (op (op x y) z)
      = A.2.2.1 x y z
    cm (x y : A.1) : Path A.1 (op x y) (op y x)
      = A.2.2.2 x y
  in <i> comp (<_> A.1) (cm (op a b) c @ i)
    [ (i = 0) -> <_> op (op a b) c
    , (i = 1) -> <j> comp (<_> A.1) (swp0 A c a b @ j)
      [ (j = 0) -> <_> op c (op a b)
      , (j = 1) -> cm a (op c b) ]]

swp3 (A : AscCom) (a b c : A.1)
  : Path A.1 (A.2.1 (A.2.1 a b) c) (A.2.1 (A.2.1 a c) b)
  = let
    op : A.1 -> A.1 -> A.1
      = A.2.1
    asc (x y z : A.1) : Path A.1 (op x (op y z)) (op (op x y) z)
      = A.2.2.1 x y z
    cm (x y : A.1) : Path A.1 (op x y) (op y x)
      = A.2.2.2 x y
  in <i> comp (<_> A.1) (cm (op a b) c @ i)
    [ (i = 0) -> <_> op (op a b) c
    , (i = 1) -> <j> comp (<_> A.1) (swp1 A c a b @ j)
      [ (j = 0) -> <_> op c (op a b)
      , (j = 1) -> cm b (op a c) ]]

swp4 (A : AscCom) (a b c d : A.1)
  : Path A.1 (A.2.1 a (A.2.1 b (A.2.1 c d))) (A.2.1 c (A.2.1 b (A.2.1 a d)))
  = let
    op : A.1 -> A.1 -> A.1
      = A.2.1
    asc (x y z : A.1) : Path A.1 (op x (op y z)) (op (op x y) z)
      = A.2.2.1 x y z
    cm (x y : A.1) : Path A.1 (op x y) (op y x)
      = A.2.2.2 x y
  in <i> comp (<_> A.1) (swp0 A a b (op c d) @ i)
    [ (i = 0) -> <_> op a (op b (op c d))
    , (i = 1) -> <j> comp (<_> A.1) (op b (swp0 A a c d @ j))
      [ (j = 0) -> <_> (op b (op a (op c d)))
    , (j = 1) -> swp0 A b c (op a d) ]]

swp5 (A : AscCom) (a b c d : A.1)
  : Path A.1 (A.2.1 a (A.2.1 b (A.2.1 c d))) (A.2.1 d (A.2.1 b (A.2.1 c a)))
  = let
    op : A.1 -> A.1 -> A.1
      = A.2.1
    asc (x y z : A.1) : Path A.1 (op x (op y z)) (op (op x y) z)
      = A.2.2.1 x y z
    cm (x y : A.1) : Path A.1 (op x y) (op y x)
      = A.2.2.2 x y
  in <i> comp (<_> A.1) (swp0 A a b (op c d) @ i)
    [ (i = 0) -> <_> op a (op b (op c d))
    , (i = 1) -> <j> comp (<_> A.1) (op b (swp1 A a c d @ j))
      [ (j = 0) -> <_> (op b (op a (op c d)))
      , (j = 1) -> swp0 A b d (op c a) ]]

swp6 (A : AscCom) (a b c d : A.1)
  : Path A.1 (A.2.1 (A.2.1 a b) (A.2.1 c d)) (A.2.1 (A.2.1 c b) (A.2.1 a d))
  = let
    op : A.1 -> A.1 -> A.1
      = A.2.1
    asc (x y z : A.1) : Path A.1 (op x (op y z)) (op (op x y) z)
      = A.2.2.1 x y z
    cm (x y : A.1) : Path A.1 (op x y) (op y x)
      = A.2.2.2 x y
  in <i> comp (<_> A.1) (asc a b (op c d) @ -i)
    [ (i = 0) -> <_> op (op a b) (op c d)
    , (i = 1) -> <j> comp (<_> A.1) (swp4 A a b c d @ j)
      [ (j = 0) -> <_> (op a (op b (op c d)))
      , (j = 1) -> asc c b (op a d) ]]

swp7 (A : AscCom) (a b c d : A.1)
  : Path A.1 (A.2.1 (A.2.1 a b) (A.2.1 c d)) (A.2.1 (A.2.1 d b) (A.2.1 c a))
  = let
    op : A.1 -> A.1 -> A.1
      = A.2.1
    asc (x y z : A.1) : Path A.1 (op x (op y z)) (op (op x y) z)
      = A.2.2.1 x y z
    cm (x y : A.1) : Path A.1 (op x y) (op y x)
      = A.2.2.2 x y
  in <i> comp (<_> A.1) (asc a b (op c d) @ -i)
    [ (i = 0) -> <_> op (op a b) (op c d)
    , (i = 1) -> <j> comp (<_> A.1) (swp5 A a b c d @ j)
      [ (j = 0) -> <_> (op a (op b (op c d)))
      , (j = 1) -> asc d b (op c a) ]]

swp8 (A : AscCom) (a b c d : A.1)
  : Path A.1 (A.2.1 (A.2.1 a b) (A.2.1 c d)) (A.2.1 (A.2.1 a c) (A.2.1 b d))
  = let
    op : A.1 -> A.1 -> A.1
      = A.2.1
    asc (x y z : A.1) : Path A.1 (op x (op y z)) (op (op x y) z)
      = A.2.2.1 x y z
    cm (x y : A.1) : Path A.1 (op x y) (op y x)
      = A.2.2.2 x y
  in <i> comp (<_> A.1) (asc a b (op c d) @ -i)
    [ (i = 0) -> <_> op (op a b) (op c d)
    , (i = 1) -> <j> comp (<_> A.1) (op a (swp0 A b c d @ j))
      [ (j = 0) -> <_> (op a (op b (op c d)))
      , (j = 1) -> asc a c (op b d) ]]

swp9 (A : AscCom) (a b c d : A.1)
  : Path A.1 (A.2.1 (A.2.1 a b) (A.2.1 c d)) (A.2.1 (A.2.1 a d) (A.2.1 c b))
  = let
    op : A.1 -> A.1 -> A.1
      = A.2.1
    asc (x y z : A.1) : Path A.1 (op x (op y z)) (op (op x y) z)
      = A.2.2.1 x y z
    cm (x y : A.1) : Path A.1 (op x y) (op y x)
      = A.2.2.2 x y
  in <i> comp (<_> A.1) (asc a b (op c d) @ -i)
    [ (i = 0) -> <_> op (op a b) (op c d)
    , (i = 1) -> <j> comp (<_> A.1) (op a (swp1 A b c d @ j))
      [ (j = 0) -> <_> (op a (op b (op c d)))
      , (j = 1) -> asc a d (op c b) ]]

swptrans (A : AscCom) (k l : A.1) (a b c : prod A.1 A.1)
    (p0 : Path A.1 (A.2.1 k (A.2.1 a.1 b.2)) (A.2.1 k (A.2.1 b.1 a.2)))
    (p1 : Path A.1 (A.2.1 l (A.2.1 b.1 c.2)) (A.2.1 l (A.2.1 c.1 b.2)))
  : Path A.1 (A.2.1 (A.2.1 k (A.2.1 l b.2)) (A.2.1 a.1 c.2))
           (A.2.1 (A.2.1 k (A.2.1 l b.2)) (A.2.1 c.1 a.2))
  = let
    op : A.1 -> A.1 -> A.1
      = A.2.1
    op3 (x y z : A.1) : A.1
      = op x (op y z)
    asc (x y z : A.1) : Path A.1 (op x (op y z)) (op (op x y) z)
      = A.2.2.1 x y z
    cm (x y : A.1) : Path A.1 (op x y) (op y x)
      = A.2.2.2 x y
    p2 : Path A.1 (op (op l c.2) (op3 k a.1 b.2)) (op (op3 k l b.2) (op a.1 c.2))
      = <i> comp (<_> A.1) (swp9 A l c.2 a.1 (op k b.2) @ i)
        [ (i = 0) -> <j> op (op l c.2) (swp0 A k a.1 b.2 @ -j)
        , (i = 1) -> <j> op (swp0 A l k b.2 @ j) (op a.1 c.2) ]
    p3 : Path A.1 (op (op l c.2) (op3 k a.1 b.2)) (op (op k a.2) (op3 l b.1 c.2))
      = <i> comp (<_> A.1) (swp1 A (op l c.2) k (op b.1 a.2) @ i)
        [ (i = 0) -> <j> op (op l c.2) (p0 @ -j)
        , (i = 1) -> <j> comp (<_> A.1) (swp6 A b.1 a.2 k (op l c.2) @ j)
          [ (j = 0) -> <_> op (op b.1 a.2) (op3 k l c.2)
          , (j = 1) -> <m> op (op k a.2) (swp0 A b.1 l c.2 @ m) ]]
    p4 : Path A.1 (op (op k a.2) (op3 l b.1 c.2)) (op (op3 k l b.2) (op c.1 a.2))
      = <i> comp (<_> A.1) (op (op k a.2) (swp0 A l c.1 b.2 @ i))
        [ (i = 0) -> <j> op (op k a.2) (p1 @ -j)
        , (i = 1) -> swp9 A k a.2 c.1 (op l b.2) ]
  in <i> comp (<_> A.1) (p3 @ i) [ (i = 0) -> p2, (i = 1) -> p4 ]
