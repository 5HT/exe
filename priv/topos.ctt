{- Topos Theory:
   - subobjectClassifier, Topos.
   Copyright (c) Groupoid Infinity, 2014-2018 -}

module topos where
import cat
import cones

mono (P: precategory) (Y Z: carrier P) (f: hom P Y Z): U
  = (X: carrier P) (g1 g2: hom P X Y)
 -> Path (hom P X Z) (compose P X Y Z g1 f) (compose P X Y Z g2 f)
 -> Path (hom P X Y) g1 g2

epi (P: precategory) (X Y: carrier P) (f: hom P X Y): U
  = (Z: carrier P) (g1 g2: hom P Y Z)
 -> Path (hom P X Z) (compose P X Y Z f g1) (compose P X Y Z f g2)
 -> Path (hom P Y Z) g1 g2

isCCC (C: precategory): U
  = (Prod: (A B: carrier C) -> carrier C)
  * (P1: (A B: carrier C) -> hom C (Prod A B) A)
  * (P2: (A B: carrier C) -> hom C (Prod A B) B)
  * (Exp: (A B: carrier C) -> carrier C)
  * (Apply: (A B E: carrier C) -> hom C (Prod (Exp A B) A) B)
  * (Term:  terminal C)
  * unit -- TODO: Beta, Eta rules

subobjectClassifier (C: precategory): U
  = (omega: carrier C)
  * (end: terminal C)
  * (trueHom: hom C end.1 omega)
  * (xi: (V X: carrier C) (j: hom C V X) -> hom C X omega)
  * (square: (V X: carrier C) (j: hom C V X) -> mono C V X j
         -> hasPullback C (omega,(end.1,trueHom),(X,xi V X j)))
  * ((V X: carrier C) (j: hom C V X) (k: hom C X omega)
         -> mono C V X j
         -> hasPullback C (omega,(end.1,trueHom),(X,k))
         -> Path (hom C X omega) (xi V X j) k)

Topos (cat: precategory): U
  = (rezk: isCategory cat)
  * (cartesianClosed: isCCC cat)
  * subobjectClassifier cat

