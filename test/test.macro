namespace.file :=
    let (wow := #import.module)
        (other : t := #that)
    in new
(default a,'@' : T)
(a,'@' := v)
(x := dec_32bit"1024")
(y := hex_64bit"ffff")
(s := str_utf8"“якщо”")
(a.{u} : ta.{(v|w),(x+1)} := fa xa.{1,[[[]]],[a,b,c]})
(a.b.c := new (u := x.y.z))
(q : Type := record
    (a : A -> B)
    (b : C)
    (x := fx))
(f (p:P) : \/ (q:Q) -> Z)
(f  p
    {{x,y},{}}
    [a,{b}|c.d.e]
    :=
    \ q -> z)
(o : record () := new ())
(ddd := data
    (A : ddd)
    (B : \/(Arg : TArg) -> ddd)
    (C (x1:T1) (x2:T2) : ddd))
(z := case f x y of
    (A, B x, C x y -> foo)
    ({
        [],
        [A],
        [B {x,y}, C x y | Q]
    } -> bar))
